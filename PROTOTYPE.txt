1. Implementation:
	I used python for my prototype. The prototype takes cDNA data from the ENSEMBL genetic database, which can be found here:
	ftp://ftp.ensembl.org/pub/release-71/fasta/
cDNA stands for complementary DNA, and is basically the genes which code for proteins. The program takes a folder full of cDNA data for different species as its input. Before analyzing the data, I need to traverse the file and find the beginning and end of each gene. Before each gene's genetic code, the file has a line with important information like code name of the gene, which i need to extract.  
	The program also takes a file called 'filter.txt' as input.  this file contains a list of gene codenames, and the program will only compare genes that are included in the list. This is a temporary workaround to allow the prototype to produce some results, because otherwise it would be far too slow. At the moment, the filter file forces the program to only look at one gene, called BRCA2, which is related to breast cancer and is found in most of the species in the database.
	I process the data by using a text comparison algorithm which tries to find the shortest possible number of edits to change one string into another.  The algorithm is described in the paper 'text comparison.txt' which I have included in my file. However, I modified the algorithm somewhat from the version in the paper so that it treats  substitution as a single change instead of as an addition and a deletion.
	The program produces two outputs. First, it returns an array with the number of differences between each pair of species.  It uses the alphabetical order from the species in the folder, so Differences[1][3] would show the number of differences found between the second and fourth species in alphabetical order.  
	Second, the program will attempt to draw an evolutionary tree using the array of differences between the species. In the tree, the x position at which two species branch apart is proportional to the number of differences found between the two species.

2. What Have I Learned:
	The genetic data is harder to work with than I expected. The genes are named, but the names for genes are completely different between species, making comparison difficult. If you look in the filter.txt file, you will see a long list of code names, all of which correspond to the BRCA2 gene in different species. Considering that the dataset is called 'ENSEMBL annotated human genome data' on amazon AWS, I expected things like which genes went together to be easier to figure out. 
	I would also like to report the top N genes that are unique to a species, but the lack of information in these data files would make this result very unclear. For my final version, I am thinking of using another database to look up a description of the genes that I found to be most unique to a species. Eg:
	http://www.ncbi.nlm.nih.gov/gene/?term=ENSG00000188529
I have not learned too much yet about any trends in the data or anything, because of this difficulty

3. New Goals:
	The most striking thing I noticed when designing my prototype was that it was ridiculously slow.  Even after narrowing down the genes I was looking at to a single gene with my filter file, it still takes qutie some time to finish comparing species. This is because my text comparison algorithm slows down as the number of differences between the two strings increases.  The next thing I will work on is improving my text comparison algorithm, and I also want to re-do my program in c++ so that it will run faster.  The current python version is just too slow to do much with the data, even if I had multiple versions running simultaneously.  
	I also think I will abandon the idea of looking at non-coding DNA.  I think that non-coding regulatory DNA is an interesting field of research, but these areas are not nicely grouped into genes and I don't think I could do or learn anything interesting from these areas in my project. 
	Since I will only be looking at genes people have already identified, I also want to figure out a better way to check the names of genes and see if they match.  The filter file idea is just a temporary workaround, I would like to be able to check in a database and see if the code names from different species correspond to the same gene. 
	Finally, as I said before, I plan to connect to a second database with descriptions of genes in order to report information that is actually meaningful instead of just the names or locations of genes.  

4. Most Challenging Aspect:
	The most challenging aspect of working with this genetic data was that the data was not very user-friendly.  The raw DNA data is literally just a huge list of base-pairs with no information about where certain features are located.  Even with the processed cDNA data, there is still only a few lines with complicated code names and some information about the gene's type. The data is clearly not inteded to be looked at directly by humans.  
	